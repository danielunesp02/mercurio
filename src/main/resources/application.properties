# Database Config
# Un-comment these lines to connect to a database. When commented out, you automatically get an in-memory-database.
spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:postgresql://localhost:5432/hendisantika?currentSchema=liquibase2

#    PRODUCTION
spring.datasource.url=jdbc:postgresql://ec2-52-72-190-41.compute-1.amazonaws.com:5432/d1nhl0bn4pt532
spring.datasource.username=kdmpdfokmrabaz
spring.datasource.password=72e085a1e6f469f0bed07ddaa517606fafb6642314c90c5ef47d60ea69203728

#    LOCALHOST
#spring.datasource.url=jdbc:postgresql://localhost:5432/mercurio
#spring.datasource.username=postgres
#spring.datasource.password=postgres

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.default_schema=dbi04v09lskcdi
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
#spring.liquibase.default-schema=dbi04v09lskcdi

#spring.datasource.initialization-mode=create


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/home/danielbevilacqua/projects/files